{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","index.js"],"names":["Posts","_ref","posts","loading","react_default","a","createElement","className","map","post","key","id","title","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","App","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","setLoading","_useState5","_useState6","currentPage","setCurrentPage","_useState7","useEffect","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","apply","this","arguments","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","components_Posts","components_Pagination","length","pageNumber","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6NAwBeA,EAhBD,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,MACf,OADoCD,EAAdE,QAEbC,EAAAC,EAAAC,cAAA,wBAIPF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACXL,EAAMM,IAAI,SAAAC,GAAI,OACbL,EAAAC,EAAAC,cAAA,MAAII,IAAKD,EAAKE,GAAIJ,UAAU,mBACzBE,EAAKG,WCaDC,EAtBI,SAAAZ,GAGjB,IAH6D,IAAzCa,EAAyCb,EAAzCa,aAAcC,EAA2Bd,EAA3Bc,WAAYC,EAAef,EAAfe,SACxCC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYI,KAAKH,GAGnB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXU,EAAYT,IAAI,SAAAc,GAAM,OACrBlB,EAAAC,EAAAC,cAAA,MAAII,IAAKY,EAAQf,UAAU,aACzBH,EAAAC,EAAAC,cAAA,KAAGiB,QAAS,kBAAMP,EAASM,IAASE,KAAK,KAAKjB,UAAU,aACrDe,0BC6BAG,SAtCH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTxB,EADS0B,EAAA,GACFG,EADEH,EAAA,GAAAI,EAEcL,oBAAS,GAFvBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAET7B,EAFS8B,EAAA,GAEAC,EAFAD,EAAA,GAAAE,EAGsBR,mBAAS,GAH/BS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGTE,EAHSD,EAAA,GAGIE,EAHJF,EAAA,GAAAG,EAIOZ,mBAAS,IAAzBb,EAJSe,OAAAC,EAAA,EAAAD,CAAAU,EAAA,MAMhBC,oBAAU,YACQ,eAAAvC,EAAA4B,OAAAY,EAAA,EAAAZ,CAAAa,EAAArC,EAAAsC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAArC,EAAAyC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBf,GAAW,GADMa,EAAAE,KAAA,EAECC,IAAMC,IAAI,8CAFX,OAEXN,EAFWE,EAAAK,KAGjBrB,EAASc,EAAIQ,MACbnB,GAAW,GAJM,wBAAAa,EAAAO,SAAAV,MAAH,yBAAA3C,EAAAsD,MAAAC,KAAAC,YAAA,EAOhBC,IACC,IAGH,IAAMC,EAAkBtB,EAAcvB,EAChC8C,EAAmBD,EAAkB7C,EACrC+C,EAAe3D,EAAM4D,MAAMF,EAAkBD,GAKnD,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,WACAH,EAAAC,EAAAC,cAACyD,EAAD,CAAO7D,MAAO2D,EAAc1D,QAASA,IACrCC,EAAAC,EAAAC,cAAC0D,EAAD,CACElD,aAAcA,EACdC,WAAYb,EAAM+D,OAClBjD,SATW,SAAAkD,GAAU,OAAI5B,EAAe4B,SC/BhDC,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.eee2eee5.chunk.js","sourcesContent":["// Name: Tommy Cao\n// Date: 6/23/19\n// Title: React-pagination\n// Description:  Use React to implement a custom pagination to get a certain number of fetched posts per page. \n//               It also uses useState and useEffect hooks as well.\n\nimport React from 'react';\n\nconst Posts = ({ posts, loading }) => {\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <ul className='list-group mb-4'>\n      {posts.map(post => (\n        <li key={post.id} className='list-group-item'>\n          {post.title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Posts;\n","// Name: Tommy Cao\n// Date: 6/23/19\n// Title: React-pagination\n// Description:  Use React to implement a custom pagination to get a certain number of fetched posts per page. \n//               It also uses useState and useEffect hooks as well.\n\nimport React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <a onClick={() => paginate(number)} href='!#' className='page-link'>\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","// Name: Tommy Cao\n// Date: 6/23/19\n// Title: React-pagination\n// Description:  Use React to implement a custom pagination to get a certain number of fetched posts per page. \n//               It also uses useState and useEffect hooks as well.\n\nimport React, { useState, useEffect } from 'react';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container mt-5'>\n      <h1 className='text-primary mb-3'>My Blog</h1>\n      <Posts posts={currentPosts} loading={loading} />\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}